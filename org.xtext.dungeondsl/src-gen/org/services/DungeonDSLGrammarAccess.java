/*
 * generated by Xtext 2.37.0
 */
package org.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class DungeonDSLGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class DungeonElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.DungeonDSL.Dungeon");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDungeonKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cThemeKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cThemeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cThemeSTRINGTerminalRuleCall_5_0 = (RuleCall)cThemeAssignment_5.eContents().get(0);
		private final Keyword cLvlKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cEqualsSignKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cLvlAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cLvlINTTerminalRuleCall_8_0 = (RuleCall)cLvlAssignment_8.eContents().get(0);
		private final Assignment cFloorsAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cFloorsFloorParserRuleCall_9_0 = (RuleCall)cFloorsAssignment_9.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//Dungeon:
		//    'Dungeon' name=ID '{'
		//        'theme' '=' theme=STRING
		//        'lvl' '=' lvl=INT
		//        (floors+=Floor)*
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Dungeon' name=ID '{'
		//    'theme' '=' theme=STRING
		//    'lvl' '=' lvl=INT
		//    (floors+=Floor)*
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Dungeon'
		public Keyword getDungeonKeyword_0() { return cDungeonKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'theme'
		public Keyword getThemeKeyword_3() { return cThemeKeyword_3; }
		
		//'='
		public Keyword getEqualsSignKeyword_4() { return cEqualsSignKeyword_4; }
		
		//theme=STRING
		public Assignment getThemeAssignment_5() { return cThemeAssignment_5; }
		
		//STRING
		public RuleCall getThemeSTRINGTerminalRuleCall_5_0() { return cThemeSTRINGTerminalRuleCall_5_0; }
		
		//'lvl'
		public Keyword getLvlKeyword_6() { return cLvlKeyword_6; }
		
		//'='
		public Keyword getEqualsSignKeyword_7() { return cEqualsSignKeyword_7; }
		
		//lvl=INT
		public Assignment getLvlAssignment_8() { return cLvlAssignment_8; }
		
		//INT
		public RuleCall getLvlINTTerminalRuleCall_8_0() { return cLvlINTTerminalRuleCall_8_0; }
		
		//(floors+=Floor)*
		public Assignment getFloorsAssignment_9() { return cFloorsAssignment_9; }
		
		//Floor
		public RuleCall getFloorsFloorParserRuleCall_9_0() { return cFloorsFloorParserRuleCall_9_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}
	public class FloorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.DungeonDSL.Floor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFloorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cRoomsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cRoomsRoomParserRuleCall_3_0 = (RuleCall)cRoomsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Floor:
		//    'Floor' name=ID '{'
		//        (rooms+=Room)*
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Floor' name=ID '{'
		//    (rooms+=Room)*
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Floor'
		public Keyword getFloorKeyword_0() { return cFloorKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//(rooms+=Room)*
		public Assignment getRoomsAssignment_3() { return cRoomsAssignment_3; }
		
		//Room
		public RuleCall getRoomsRoomParserRuleCall_3_0() { return cRoomsRoomParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class RoomElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.DungeonDSL.Room");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRoomKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cSizeKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cSizeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cSizeSizesEnumRuleCall_5_0 = (RuleCall)cSizeAssignment_5.eContents().get(0);
		private final Keyword cTypeKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cEqualsSignKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cTypeAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cTypeRoomTypesEnumRuleCall_8_0 = (RuleCall)cTypeAssignment_8.eContents().get(0);
		private final Keyword cFloorIDKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cEqualsSignKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cFloorAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cFloorIDTerminalRuleCall_11_0 = (RuleCall)cFloorAssignment_11.eContents().get(0);
		private final Keyword cConnectionsKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Keyword cEqualsSignKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Keyword cLeftSquareBracketKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Assignment cConnectionsAssignment_15 = (Assignment)cGroup.eContents().get(15);
		private final RuleCall cConnectionsIDTerminalRuleCall_15_0 = (RuleCall)cConnectionsAssignment_15.eContents().get(0);
		private final Group cGroup_16 = (Group)cGroup.eContents().get(16);
		private final Keyword cCommaKeyword_16_0 = (Keyword)cGroup_16.eContents().get(0);
		private final Assignment cConnectionsAssignment_16_1 = (Assignment)cGroup_16.eContents().get(1);
		private final RuleCall cConnectionsIDTerminalRuleCall_16_1_0 = (RuleCall)cConnectionsAssignment_16_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_17 = (Keyword)cGroup.eContents().get(17);
		private final Assignment cTrapsAssignment_18 = (Assignment)cGroup.eContents().get(18);
		private final RuleCall cTrapsTrapParserRuleCall_18_0 = (RuleCall)cTrapsAssignment_18.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_19 = (Keyword)cGroup.eContents().get(19);
		
		//Room:
		//    'Room' name=ID '{'
		//        'size' '=' size=Sizes
		//        'type' '=' type=RoomTypes
		//        'floorID' '=' floor=ID
		//        'connections' "=" '[' connections+=ID (',' connections+=ID)* ']'
		//        (traps+=Trap)*
		//    '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Room' name=ID '{'
		//    'size' '=' size=Sizes
		//    'type' '=' type=RoomTypes
		//    'floorID' '=' floor=ID
		//    'connections' "=" '[' connections+=ID (',' connections+=ID)* ']'
		//    (traps+=Trap)*
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Room'
		public Keyword getRoomKeyword_0() { return cRoomKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'size'
		public Keyword getSizeKeyword_3() { return cSizeKeyword_3; }
		
		//'='
		public Keyword getEqualsSignKeyword_4() { return cEqualsSignKeyword_4; }
		
		//size=Sizes
		public Assignment getSizeAssignment_5() { return cSizeAssignment_5; }
		
		//Sizes
		public RuleCall getSizeSizesEnumRuleCall_5_0() { return cSizeSizesEnumRuleCall_5_0; }
		
		//'type'
		public Keyword getTypeKeyword_6() { return cTypeKeyword_6; }
		
		//'='
		public Keyword getEqualsSignKeyword_7() { return cEqualsSignKeyword_7; }
		
		//type=RoomTypes
		public Assignment getTypeAssignment_8() { return cTypeAssignment_8; }
		
		//RoomTypes
		public RuleCall getTypeRoomTypesEnumRuleCall_8_0() { return cTypeRoomTypesEnumRuleCall_8_0; }
		
		//'floorID'
		public Keyword getFloorIDKeyword_9() { return cFloorIDKeyword_9; }
		
		//'='
		public Keyword getEqualsSignKeyword_10() { return cEqualsSignKeyword_10; }
		
		//floor=ID
		public Assignment getFloorAssignment_11() { return cFloorAssignment_11; }
		
		//ID
		public RuleCall getFloorIDTerminalRuleCall_11_0() { return cFloorIDTerminalRuleCall_11_0; }
		
		//'connections'
		public Keyword getConnectionsKeyword_12() { return cConnectionsKeyword_12; }
		
		//"="
		public Keyword getEqualsSignKeyword_13() { return cEqualsSignKeyword_13; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_14() { return cLeftSquareBracketKeyword_14; }
		
		//connections+=ID
		public Assignment getConnectionsAssignment_15() { return cConnectionsAssignment_15; }
		
		//ID
		public RuleCall getConnectionsIDTerminalRuleCall_15_0() { return cConnectionsIDTerminalRuleCall_15_0; }
		
		//(',' connections+=ID)*
		public Group getGroup_16() { return cGroup_16; }
		
		//','
		public Keyword getCommaKeyword_16_0() { return cCommaKeyword_16_0; }
		
		//connections+=ID
		public Assignment getConnectionsAssignment_16_1() { return cConnectionsAssignment_16_1; }
		
		//ID
		public RuleCall getConnectionsIDTerminalRuleCall_16_1_0() { return cConnectionsIDTerminalRuleCall_16_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_17() { return cRightSquareBracketKeyword_17; }
		
		//(traps+=Trap)*
		public Assignment getTrapsAssignment_18() { return cTrapsAssignment_18; }
		
		//Trap
		public RuleCall getTrapsTrapParserRuleCall_18_0() { return cTrapsTrapParserRuleCall_18_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_19() { return cRightCurlyBracketKeyword_19; }
	}
	public class TrapElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.DungeonDSL.Trap");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTrapKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cTriggerKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cTriggerAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cTriggerEventTriggerEnumRuleCall_5_0 = (RuleCall)cTriggerAssignment_5.eContents().get(0);
		private final Keyword cDisarmableKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cEqualsSignKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cDisarmableAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cDisarmableBOOLEANEnumRuleCall_8_0 = (RuleCall)cDisarmableAssignment_8.eContents().get(0);
		private final Keyword cTriggerChanceKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cEqualsSignKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cTriggerChanceAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cTriggerChanceINTTerminalRuleCall_11_0 = (RuleCall)cTriggerChanceAssignment_11.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		//Trap:
		//    'Trap' name=ID '{'
		//        'trigger' '=' trigger=EventTrigger
		//        'disarmable' '=' disarmable=BOOLEAN
		//        'triggerChance' '=' triggerChance=INT
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Trap' name=ID '{'
		//    'trigger' '=' trigger=EventTrigger
		//    'disarmable' '=' disarmable=BOOLEAN
		//    'triggerChance' '=' triggerChance=INT
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Trap'
		public Keyword getTrapKeyword_0() { return cTrapKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'trigger'
		public Keyword getTriggerKeyword_3() { return cTriggerKeyword_3; }
		
		//'='
		public Keyword getEqualsSignKeyword_4() { return cEqualsSignKeyword_4; }
		
		//trigger=EventTrigger
		public Assignment getTriggerAssignment_5() { return cTriggerAssignment_5; }
		
		//EventTrigger
		public RuleCall getTriggerEventTriggerEnumRuleCall_5_0() { return cTriggerEventTriggerEnumRuleCall_5_0; }
		
		//'disarmable'
		public Keyword getDisarmableKeyword_6() { return cDisarmableKeyword_6; }
		
		//'='
		public Keyword getEqualsSignKeyword_7() { return cEqualsSignKeyword_7; }
		
		//disarmable=BOOLEAN
		public Assignment getDisarmableAssignment_8() { return cDisarmableAssignment_8; }
		
		//BOOLEAN
		public RuleCall getDisarmableBOOLEANEnumRuleCall_8_0() { return cDisarmableBOOLEANEnumRuleCall_8_0; }
		
		//'triggerChance'
		public Keyword getTriggerChanceKeyword_9() { return cTriggerChanceKeyword_9; }
		
		//'='
		public Keyword getEqualsSignKeyword_10() { return cEqualsSignKeyword_10; }
		
		//triggerChance=INT
		public Assignment getTriggerChanceAssignment_11() { return cTriggerChanceAssignment_11; }
		
		//INT
		public RuleCall getTriggerChanceINTTerminalRuleCall_11_0() { return cTriggerChanceINTTerminalRuleCall_11_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
	}
	
	public class BOOLEANElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.DungeonDSL.BOOLEAN");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cTrueEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cTrueTrueKeyword_0_0 = (Keyword)cTrueEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cFalseEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cFalseFalseKeyword_1_0 = (Keyword)cFalseEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum BOOLEAN:
		//    true | false
		//;
		public EnumRule getRule() { return rule; }
		
		//true | false
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//true
		public EnumLiteralDeclaration getTrueEnumLiteralDeclaration_0() { return cTrueEnumLiteralDeclaration_0; }
		
		public Keyword getTrueTrueKeyword_0_0() { return cTrueTrueKeyword_0_0; }
		
		//false
		public EnumLiteralDeclaration getFalseEnumLiteralDeclaration_1() { return cFalseEnumLiteralDeclaration_1; }
		
		public Keyword getFalseFalseKeyword_1_0() { return cFalseFalseKeyword_1_0; }
	}
	public class SizesElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.DungeonDSL.Sizes");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cLARGEEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cLARGELARGEKeyword_0_0 = (Keyword)cLARGEEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cMEDIUMEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cMEDIUMMEDIUMKeyword_1_0 = (Keyword)cMEDIUMEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cSMALLEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cSMALLSMALLKeyword_2_0 = (Keyword)cSMALLEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum Sizes:
		//    LARGE | MEDIUM | SMALL
		//;
		public EnumRule getRule() { return rule; }
		
		//LARGE | MEDIUM | SMALL
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//LARGE
		public EnumLiteralDeclaration getLARGEEnumLiteralDeclaration_0() { return cLARGEEnumLiteralDeclaration_0; }
		
		public Keyword getLARGELARGEKeyword_0_0() { return cLARGELARGEKeyword_0_0; }
		
		//MEDIUM
		public EnumLiteralDeclaration getMEDIUMEnumLiteralDeclaration_1() { return cMEDIUMEnumLiteralDeclaration_1; }
		
		public Keyword getMEDIUMMEDIUMKeyword_1_0() { return cMEDIUMMEDIUMKeyword_1_0; }
		
		//SMALL
		public EnumLiteralDeclaration getSMALLEnumLiteralDeclaration_2() { return cSMALLEnumLiteralDeclaration_2; }
		
		public Keyword getSMALLSMALLKeyword_2_0() { return cSMALLSMALLKeyword_2_0; }
	}
	public class RoomTypesElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.DungeonDSL.RoomTypes");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cCOMBATEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cCOMBATCOMBATKeyword_0_0 = (Keyword)cCOMBATEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cTREASUREEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cTREASURETREASUREKeyword_1_0 = (Keyword)cTREASUREEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cBOSSEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cBOSSBOSSKeyword_2_0 = (Keyword)cBOSSEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cPUZZLEEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cPUZZLEPUZZLEKeyword_3_0 = (Keyword)cPUZZLEEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cSHOPEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cSHOPSHOPKeyword_4_0 = (Keyword)cSHOPEnumLiteralDeclaration_4.eContents().get(0);
		
		//enum RoomTypes:
		//    COMBAT | TREASURE | BOSS | PUZZLE | SHOP
		//;
		public EnumRule getRule() { return rule; }
		
		//COMBAT | TREASURE | BOSS | PUZZLE | SHOP
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//COMBAT
		public EnumLiteralDeclaration getCOMBATEnumLiteralDeclaration_0() { return cCOMBATEnumLiteralDeclaration_0; }
		
		public Keyword getCOMBATCOMBATKeyword_0_0() { return cCOMBATCOMBATKeyword_0_0; }
		
		//TREASURE
		public EnumLiteralDeclaration getTREASUREEnumLiteralDeclaration_1() { return cTREASUREEnumLiteralDeclaration_1; }
		
		public Keyword getTREASURETREASUREKeyword_1_0() { return cTREASURETREASUREKeyword_1_0; }
		
		//BOSS
		public EnumLiteralDeclaration getBOSSEnumLiteralDeclaration_2() { return cBOSSEnumLiteralDeclaration_2; }
		
		public Keyword getBOSSBOSSKeyword_2_0() { return cBOSSBOSSKeyword_2_0; }
		
		//PUZZLE
		public EnumLiteralDeclaration getPUZZLEEnumLiteralDeclaration_3() { return cPUZZLEEnumLiteralDeclaration_3; }
		
		public Keyword getPUZZLEPUZZLEKeyword_3_0() { return cPUZZLEPUZZLEKeyword_3_0; }
		
		//SHOP
		public EnumLiteralDeclaration getSHOPEnumLiteralDeclaration_4() { return cSHOPEnumLiteralDeclaration_4; }
		
		public Keyword getSHOPSHOPKeyword_4_0() { return cSHOPSHOPKeyword_4_0; }
	}
	public class EventTriggerElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.DungeonDSL.EventTrigger");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cStepOnEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cStepOnStepOnKeyword_0_0 = (Keyword)cStepOnEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cOpenDoorEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cOpenDoorOpenDoorKeyword_1_0 = (Keyword)cOpenDoorEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum EventTrigger:
		//    stepOn |
		//    openDoor;
		public EnumRule getRule() { return rule; }
		
		//stepOn |
		//openDoor
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//stepOn
		public EnumLiteralDeclaration getStepOnEnumLiteralDeclaration_0() { return cStepOnEnumLiteralDeclaration_0; }
		
		public Keyword getStepOnStepOnKeyword_0_0() { return cStepOnStepOnKeyword_0_0; }
		
		//openDoor
		public EnumLiteralDeclaration getOpenDoorEnumLiteralDeclaration_1() { return cOpenDoorEnumLiteralDeclaration_1; }
		
		public Keyword getOpenDoorOpenDoorKeyword_1_0() { return cOpenDoorOpenDoorKeyword_1_0; }
	}
	
	private final DungeonElements pDungeon;
	private final FloorElements pFloor;
	private final RoomElements pRoom;
	private final TrapElements pTrap;
	private final BOOLEANElements eBOOLEAN;
	private final SizesElements eSizes;
	private final RoomTypesElements eRoomTypes;
	private final EventTriggerElements eEventTrigger;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public DungeonDSLGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pDungeon = new DungeonElements();
		this.pFloor = new FloorElements();
		this.pRoom = new RoomElements();
		this.pTrap = new TrapElements();
		this.eBOOLEAN = new BOOLEANElements();
		this.eSizes = new SizesElements();
		this.eRoomTypes = new RoomTypesElements();
		this.eEventTrigger = new EventTriggerElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.DungeonDSL".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Dungeon:
	//    'Dungeon' name=ID '{'
	//        'theme' '=' theme=STRING
	//        'lvl' '=' lvl=INT
	//        (floors+=Floor)*
	//    '}';
	public DungeonElements getDungeonAccess() {
		return pDungeon;
	}
	
	public ParserRule getDungeonRule() {
		return getDungeonAccess().getRule();
	}
	
	//Floor:
	//    'Floor' name=ID '{'
	//        (rooms+=Room)*
	//    '}';
	public FloorElements getFloorAccess() {
		return pFloor;
	}
	
	public ParserRule getFloorRule() {
		return getFloorAccess().getRule();
	}
	
	//Room:
	//    'Room' name=ID '{'
	//        'size' '=' size=Sizes
	//        'type' '=' type=RoomTypes
	//        'floorID' '=' floor=ID
	//        'connections' "=" '[' connections+=ID (',' connections+=ID)* ']'
	//        (traps+=Trap)*
	//    '}'
	//;
	public RoomElements getRoomAccess() {
		return pRoom;
	}
	
	public ParserRule getRoomRule() {
		return getRoomAccess().getRule();
	}
	
	//Trap:
	//    'Trap' name=ID '{'
	//        'trigger' '=' trigger=EventTrigger
	//        'disarmable' '=' disarmable=BOOLEAN
	//        'triggerChance' '=' triggerChance=INT
	//    '}';
	public TrapElements getTrapAccess() {
		return pTrap;
	}
	
	public ParserRule getTrapRule() {
		return getTrapAccess().getRule();
	}
	
	//enum BOOLEAN:
	//    true | false
	//;
	public BOOLEANElements getBOOLEANAccess() {
		return eBOOLEAN;
	}
	
	public EnumRule getBOOLEANRule() {
		return getBOOLEANAccess().getRule();
	}
	
	//enum Sizes:
	//    LARGE | MEDIUM | SMALL
	//;
	public SizesElements getSizesAccess() {
		return eSizes;
	}
	
	public EnumRule getSizesRule() {
		return getSizesAccess().getRule();
	}
	
	//enum RoomTypes:
	//    COMBAT | TREASURE | BOSS | PUZZLE | SHOP
	//;
	public RoomTypesElements getRoomTypesAccess() {
		return eRoomTypes;
	}
	
	public EnumRule getRoomTypesRule() {
		return getRoomTypesAccess().getRule();
	}
	
	//enum EventTrigger:
	//    stepOn |
	//    openDoor;
	public EventTriggerElements getEventTriggerAccess() {
		return eEventTrigger;
	}
	
	public EnumRule getEventTriggerRule() {
		return getEventTriggerAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
