/**
 * generated by Xtext 2.37.0
 */
package org.dungeonDSL;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import org.eclipse.emf.common.util.Enumerator;

/**
 * <!-- begin-user-doc -->
 * A representation of the literals of the enumeration '<em><b>Room Types</b></em>',
 * and utility methods for working with them.
 * <!-- end-user-doc -->
 * @see org.dungeonDSL.DungeonDSLPackage#getRoomTypes()
 * @model
 * @generated
 */
public enum RoomTypes implements Enumerator
{
  /**
   * The '<em><b>COMBAT</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #COMBAT_VALUE
   * @generated
   * @ordered
   */
  COMBAT(0, "COMBAT", "COMBAT"),

  /**
   * The '<em><b>TREASURE</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #TREASURE_VALUE
   * @generated
   * @ordered
   */
  TREASURE(1, "TREASURE", "TREASURE"),

  /**
   * The '<em><b>BOSS</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #BOSS_VALUE
   * @generated
   * @ordered
   */
  BOSS(2, "BOSS", "BOSS"),

  /**
   * The '<em><b>PUZZLE</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #PUZZLE_VALUE
   * @generated
   * @ordered
   */
  PUZZLE(3, "PUZZLE", "PUZZLE"),

  /**
   * The '<em><b>SHOP</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #SHOP_VALUE
   * @generated
   * @ordered
   */
  SHOP(4, "SHOP", "SHOP");

  /**
   * The '<em><b>COMBAT</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #COMBAT
   * @model
   * @generated
   * @ordered
   */
  public static final int COMBAT_VALUE = 0;

  /**
   * The '<em><b>TREASURE</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #TREASURE
   * @model
   * @generated
   * @ordered
   */
  public static final int TREASURE_VALUE = 1;

  /**
   * The '<em><b>BOSS</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #BOSS
   * @model
   * @generated
   * @ordered
   */
  public static final int BOSS_VALUE = 2;

  /**
   * The '<em><b>PUZZLE</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #PUZZLE
   * @model
   * @generated
   * @ordered
   */
  public static final int PUZZLE_VALUE = 3;

  /**
   * The '<em><b>SHOP</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #SHOP
   * @model
   * @generated
   * @ordered
   */
  public static final int SHOP_VALUE = 4;

  /**
   * An array of all the '<em><b>Room Types</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static final RoomTypes[] VALUES_ARRAY =
    new RoomTypes[]
    {
      COMBAT,
      TREASURE,
      BOSS,
      PUZZLE,
      SHOP,
    };

  /**
   * A public read-only list of all the '<em><b>Room Types</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final List<RoomTypes> VALUES = Collections.unmodifiableList(Arrays.asList(VALUES_ARRAY));

  /**
   * Returns the '<em><b>Room Types</b></em>' literal with the specified literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param literal the literal.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static RoomTypes get(String literal)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      RoomTypes result = VALUES_ARRAY[i];
      if (result.toString().equals(literal))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>Room Types</b></em>' literal with the specified name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param name the name.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static RoomTypes getByName(String name)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      RoomTypes result = VALUES_ARRAY[i];
      if (result.getName().equals(name))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>Room Types</b></em>' literal with the specified integer value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the integer value.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static RoomTypes get(int value)
  {
    switch (value)
    {
      case COMBAT_VALUE: return COMBAT;
      case TREASURE_VALUE: return TREASURE;
      case BOSS_VALUE: return BOSS;
      case PUZZLE_VALUE: return PUZZLE;
      case SHOP_VALUE: return SHOP;
    }
    return null;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final int value;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String name;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String literal;

  /**
   * Only this class can construct instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private RoomTypes(int value, String name, String literal)
  {
    this.value = value;
    this.name = name;
    this.literal = literal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getValue()
  {
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getLiteral()
  {
    return literal;
  }

  /**
   * Returns the literal value of the enumerator, which is its string representation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    return literal;
  }
  
} //RoomTypes
