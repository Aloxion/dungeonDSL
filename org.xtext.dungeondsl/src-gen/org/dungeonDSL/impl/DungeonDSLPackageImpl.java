/**
 * generated by Xtext 2.37.0
 */
package org.dungeonDSL.impl;

import org.dungeonDSL.Dungeon;
import org.dungeonDSL.DungeonDSLFactory;
import org.dungeonDSL.DungeonDSLPackage;
import org.dungeonDSL.EventTrigger;
import org.dungeonDSL.Floor;
import org.dungeonDSL.Room;
import org.dungeonDSL.RoomTypes;
import org.dungeonDSL.Sizes;
import org.dungeonDSL.Trap;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class DungeonDSLPackageImpl extends EPackageImpl implements DungeonDSLPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dungeonEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass floorEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass roomEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass trapEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum booleanEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum sizesEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum roomTypesEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum eventTriggerEEnum = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see org.dungeonDSL.DungeonDSLPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private DungeonDSLPackageImpl()
  {
    super(eNS_URI, DungeonDSLFactory.eINSTANCE);
  }
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   *
   * <p>This method is used to initialize {@link DungeonDSLPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static DungeonDSLPackage init()
  {
    if (isInited) return (DungeonDSLPackage)EPackage.Registry.INSTANCE.getEPackage(DungeonDSLPackage.eNS_URI);

    // Obtain or create and register package
    Object registeredDungeonDSLPackage = EPackage.Registry.INSTANCE.get(eNS_URI);
    DungeonDSLPackageImpl theDungeonDSLPackage = registeredDungeonDSLPackage instanceof DungeonDSLPackageImpl ? (DungeonDSLPackageImpl)registeredDungeonDSLPackage : new DungeonDSLPackageImpl();

    isInited = true;

    // Create package meta-data objects
    theDungeonDSLPackage.createPackageContents();

    // Initialize created meta-data
    theDungeonDSLPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theDungeonDSLPackage.freeze();

    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(DungeonDSLPackage.eNS_URI, theDungeonDSLPackage);
    return theDungeonDSLPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDungeon()
  {
    return dungeonEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDungeon_Name()
  {
    return (EAttribute)dungeonEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDungeon_Theme()
  {
    return (EAttribute)dungeonEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDungeon_Lvl()
  {
    return (EAttribute)dungeonEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDungeon_Floors()
  {
    return (EReference)dungeonEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFloor()
  {
    return floorEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFloor_Name()
  {
    return (EAttribute)floorEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFloor_Rooms()
  {
    return (EReference)floorEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRoom()
  {
    return roomEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRoom_Name()
  {
    return (EAttribute)roomEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRoom_Size()
  {
    return (EAttribute)roomEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRoom_Type()
  {
    return (EAttribute)roomEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRoom_Floor()
  {
    return (EAttribute)roomEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRoom_Connections()
  {
    return (EAttribute)roomEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRoom_Traps()
  {
    return (EReference)roomEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getTrap()
  {
    return trapEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getTrap_Name()
  {
    return (EAttribute)trapEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getTrap_Trigger()
  {
    return (EAttribute)trapEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getTrap_Disarmable()
  {
    return (EAttribute)trapEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getTrap_TriggerChance()
  {
    return (EAttribute)trapEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getBOOLEAN()
  {
    return booleanEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getSizes()
  {
    return sizesEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getRoomTypes()
  {
    return roomTypesEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getEventTrigger()
  {
    return eventTriggerEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DungeonDSLFactory getDungeonDSLFactory()
  {
    return (DungeonDSLFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    dungeonEClass = createEClass(DUNGEON);
    createEAttribute(dungeonEClass, DUNGEON__NAME);
    createEAttribute(dungeonEClass, DUNGEON__THEME);
    createEAttribute(dungeonEClass, DUNGEON__LVL);
    createEReference(dungeonEClass, DUNGEON__FLOORS);

    floorEClass = createEClass(FLOOR);
    createEAttribute(floorEClass, FLOOR__NAME);
    createEReference(floorEClass, FLOOR__ROOMS);

    roomEClass = createEClass(ROOM);
    createEAttribute(roomEClass, ROOM__NAME);
    createEAttribute(roomEClass, ROOM__SIZE);
    createEAttribute(roomEClass, ROOM__TYPE);
    createEAttribute(roomEClass, ROOM__FLOOR);
    createEAttribute(roomEClass, ROOM__CONNECTIONS);
    createEReference(roomEClass, ROOM__TRAPS);

    trapEClass = createEClass(TRAP);
    createEAttribute(trapEClass, TRAP__NAME);
    createEAttribute(trapEClass, TRAP__TRIGGER);
    createEAttribute(trapEClass, TRAP__DISARMABLE);
    createEAttribute(trapEClass, TRAP__TRIGGER_CHANCE);

    // Create enums
    booleanEEnum = createEEnum(BOOLEAN);
    sizesEEnum = createEEnum(SIZES);
    roomTypesEEnum = createEEnum(ROOM_TYPES);
    eventTriggerEEnum = createEEnum(EVENT_TRIGGER);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes

    // Initialize classes and features; add operations and parameters
    initEClass(dungeonEClass, Dungeon.class, "Dungeon", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getDungeon_Name(), ecorePackage.getEString(), "name", null, 0, 1, Dungeon.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDungeon_Theme(), ecorePackage.getEString(), "theme", null, 0, 1, Dungeon.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDungeon_Lvl(), ecorePackage.getEInt(), "lvl", null, 0, 1, Dungeon.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDungeon_Floors(), this.getFloor(), null, "floors", null, 0, -1, Dungeon.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(floorEClass, Floor.class, "Floor", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getFloor_Name(), ecorePackage.getEString(), "name", null, 0, 1, Floor.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFloor_Rooms(), this.getRoom(), null, "rooms", null, 0, -1, Floor.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(roomEClass, Room.class, "Room", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getRoom_Name(), ecorePackage.getEString(), "name", null, 0, 1, Room.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getRoom_Size(), this.getSizes(), "size", null, 0, 1, Room.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getRoom_Type(), this.getRoomTypes(), "type", null, 0, 1, Room.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getRoom_Floor(), ecorePackage.getEString(), "floor", null, 0, 1, Room.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getRoom_Connections(), ecorePackage.getEString(), "connections", null, 0, -1, Room.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getRoom_Traps(), this.getTrap(), null, "traps", null, 0, -1, Room.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(trapEClass, Trap.class, "Trap", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getTrap_Name(), ecorePackage.getEString(), "name", null, 0, 1, Trap.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getTrap_Trigger(), this.getEventTrigger(), "trigger", null, 0, 1, Trap.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getTrap_Disarmable(), this.getBOOLEAN(), "disarmable", null, 0, 1, Trap.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getTrap_TriggerChance(), ecorePackage.getEInt(), "triggerChance", null, 0, 1, Trap.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Initialize enums and add enum literals
    initEEnum(booleanEEnum, org.dungeonDSL.BOOLEAN.class, "BOOLEAN");
    addEEnumLiteral(booleanEEnum, org.dungeonDSL.BOOLEAN.TRUE);
    addEEnumLiteral(booleanEEnum, org.dungeonDSL.BOOLEAN.FALSE);

    initEEnum(sizesEEnum, Sizes.class, "Sizes");
    addEEnumLiteral(sizesEEnum, Sizes.LARGE);
    addEEnumLiteral(sizesEEnum, Sizes.MEDIUM);
    addEEnumLiteral(sizesEEnum, Sizes.SMALL);

    initEEnum(roomTypesEEnum, RoomTypes.class, "RoomTypes");
    addEEnumLiteral(roomTypesEEnum, RoomTypes.COMBAT);
    addEEnumLiteral(roomTypesEEnum, RoomTypes.TREASURE);
    addEEnumLiteral(roomTypesEEnum, RoomTypes.BOSS);
    addEEnumLiteral(roomTypesEEnum, RoomTypes.PUZZLE);
    addEEnumLiteral(roomTypesEEnum, RoomTypes.SHOP);

    initEEnum(eventTriggerEEnum, EventTrigger.class, "EventTrigger");
    addEEnumLiteral(eventTriggerEEnum, EventTrigger.STEP_ON);
    addEEnumLiteral(eventTriggerEEnum, EventTrigger.OPEN_DOOR);

    // Create resource
    createResource(eNS_URI);
  }

} //DungeonDSLPackageImpl
